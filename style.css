/* 基本設定 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

#startScreen p {
  font-size: 1.5rem;
  margin-bottom: 3rem;
  text-align: center;
  line-height: 1.8;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
}

@keyframes glow {
  from { 
    text-shadow: 0 0 20px #4a90e2, 0 0 40px #4a90e2; 
  }
  to { 
    text-shadow: 0 0 30px #4a90e2, 0 0 40px #4a90e2, 0 0 50px #ff4757; 
  }
}

/* ボタン共通 */
button {
  background: linear-gradient(45deg, #4a90e2, #357abd);
  color: white;
  border: none;
  padding: 15px 30px;
  font-size: 1.2rem;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(74, 144, 226, 0.3);
  position: relative;
  overflow: hidden;
}

button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

button:hover {
  background: linear-gradient(45deg, #357abd, #2968a3);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(74, 144, 226, 0.4);
}

button:hover::before {
  left: 100%;
}

button:active {
  transform: translateY(0);
  box-shadow: 0 2px 10px rgba(74, 144, 226, 0.3);
}

/* ゲーム画面 */
#gameScreen {
  justify-content: flex-start;
  padding: 0;
  background: rgba(0, 0, 0, 0.3);
}

/* ヘッダー */
#gameHeader {
  width: 100%;
  height: 80px;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  align-items: center;
  justify-content: space-around;
  padding: 0 20px;
  border-bottom: 2px solid #4a90e2;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

#timeDisplay {
  font-size: 2rem;
  font-weight: bold;
  color: #4a90e2;
  text-shadow: 0 0 10px #4a90e2;
  font-family: 'Courier New', monospace;
  transition: all 0.3s ease;
}

/* ステータスバー */
.bar {
  width: 150px;
  height: 20px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 10px;
  overflow: hidden;
  margin-left: 10px;
  border: 1px solid rgba(255, 255, 255, 0.3);
}

.bar-fill {
  height: 100%;
  transition: width 0.5s ease;
  border-radius: 10px;
}

#healthFill {
  background: linear-gradient(90deg, #ff4757, #ff6b7a);
  width: 100%;
  box-shadow: 0 0 10px rgba(255, 71, 87, 0.5);
}

#sanityFill {
  background: linear-gradient(90deg, #5f27cd, #8854d0);
  width: 100%;
  box-shadow: 0 0 10px rgba(95, 39, 205, 0.5);
}

/* メインエリア */
#mainArea {
  flex: 1;
  width: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
}

#storeView {
  flex: 1;
  background: linear-gradient(180deg, rgba(44, 62, 80, 0.8), rgba(52, 73, 94, 0.8));
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  backdrop-filter: blur(1px);
}

/* 客エリア */
#customerArea {
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
}

.customer-sprite {
  font-size: 4rem;
  margin-bottom: 20px;
  animation: float 3s ease-in-out infinite;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
  transition: all 0.3s ease;
}

@keyframes float {
  0%, 100% { transform: translateY(0) scale(1); }
  50% { transform: translateY(-15px) scale(1.05); }
}

.speech-bubble {
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(240, 240, 240, 0.95));
  color: #333;
  padding: 15px 20px;
  border-radius: 20px;
  position: relative;
  max-width: 300px;
  text-align: center;
  margin: 0 auto;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  border: 2px solid rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(5px);
}

.speech-bubble::after {
  content: '';
  position: absolute;
  bottom: -12px;
  left: 50%;
  transform: translateX(-50%);
  border: 12px solid transparent;
  border-top-color: rgba(255, 255, 255, 0.95);
}

/* レジエリア */
#registerArea {
  position: absolute;
  bottom: 30%;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  z-index: 10;
}

.register {
  font-size: 3rem;
  margin-bottom: 15px;
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.7);
}

#registerScreen {
  background: rgba(0, 0, 0, 0.9);
  color: #00ff00;
  padding: 15px 25px;
  border-radius: 10px;
  font-family: 'Courier New', monospace;
  border: 2px solid #00ff00;
  min-width: 200px;
  box-shadow: 0 0 20px rgba(0, 255, 0, 0.3);
  transition: all 0.3s ease;
}

/* 作業エリア */
#workArea {
  height: 120px;
  background: rgba(0, 0, 0, 0.9);
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 20px;
  border-top: 2px solid #4a90e2;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.5);
}

.work-btn {
  padding: 12px 20px;
  font-size: 1rem;
  min-width: 120px;
  background: linear-gradient(45deg, #2c3e50, #34495e);
  border: 2px solid #4a90e2;
  transition: all 0.3s ease;
}

.work-btn:hover {
  background: linear-gradient(45deg, #34495e, #2c3e50);
  box-shadow: 0 0 15px rgba(74, 144, 226, 0.6);
}

/* イベントメッセージ */
#eventMessage {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.95);
  border: 3px solid #4a90e2;
  border-radius: 15px;
  padding: 30px;
  text-align: center;
  max-width: 80%;
  z-index: 1000;
  backdrop-filter: blur(10px);
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.8);
}

#eventText {
  font-size: 1.3rem;
  margin-bottom: 20px;
  line-height: 1.6;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.3);
}

/* 終了画面 */
#endScreen {
  background: linear-gradient(135deg, rgba(15, 15, 35, 0.9), rgba(22, 33, 62, 0.9));
}

#endTitle {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: #4a90e2;
  text-shadow: 0 0 20px #4a90e2;
}

#endMessage {
  font-size: 1.3rem;
  margin-bottom: 2rem;
  text-align: center;
  line-height: 1.6;
  max-width: 80%;
  text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

/* ホラー演出用のCSS */

/* 血の効果 */
.blood-effect {
  background: linear-gradient(135deg, #330000, #660000, #990000) !important;
  animation: bloodPulse 2s infinite;
}

@keyframes bloodPulse {
  0%, 100% { 
    filter: brightness(1) contrast(100%); 
  }
  50% { 
    filter: brightness(1.5) contrast(150%) saturate(200%); 
  }
}

/* 時間異常演出 */
.time-glitch {
  animation: glitch 0.3s infinite;
}

.time-distortion {
  animation: timeWarp 2s infinite;
  color: #ff0000 !important;
}

@keyframes glitch {
  0% { transform: translateX(0) skew(0deg); }
  20% { transform: translateX(-3px) skew(-2deg); }
  40% { transform: translateX(3px) skew(2deg); }
  60% { transform: translateX(-2px) skew(-1deg); }
  80% { transform: translateX(2px) skew(1deg); }
  100% { transform: translateX(0) skew(0deg); }
}

@keyframes timeWarp {
  0% { 
    transform: scale(1) rotate(0deg); 
    filter: hue-rotate(0deg) brightness(1); 
  }
  25% { 
    transform: scale(1.3) rotate(10deg); 
    filter: hue-rotate(90deg) brightness(1.5); 
  }
  50% { 
    transform: scale(0.7) rotate(-10deg); 
    filter: hue-rotate(180deg) brightness(0.5); 
  }
  75% { 
    transform: scale(1.2) rotate(5deg); 
    filter: hue-rotate(270deg) brightness(1.8); 
  }
  100% { 
    transform: scale(1) rotate(0deg); 
    filter: hue-rotate(360deg) brightness(1); 
  }
}

/* 怖い客の演出 */
.customer-scary {
  animation: scaryFloat 2s ease-in-out infinite, scaryGlow 1s ease-in-out infinite alternate;
}

.customer-scary .customer-sprite {
  font-size: 5rem;
  filter: drop-shadow(0 0 20px #ff0000);
}

.customer-scary .speech-bubble {
  background: linear-gradient(135deg, rgba(255, 100, 100, 0.95), rgba(200, 50, 50, 0.95));
  color: #ffffff;
  border-color: #ff0000;
  box-shadow: 0 0 30px rgba(255, 0, 0, 0.8);
}

@keyframes scaryFloat {
  0%, 100% { 
    transform: translateY(0) rotate(0deg) scale(1); 
  }
  50% { 
    transform: translateY(-25px) rotate(3deg) scale(1.1); 
  }
}

@keyframes scaryGlow {
  from { 
    filter: brightness(1) contrast(1) drop-shadow(0 0 10px #ff0000); 
  }
  to { 
    filter: brightness(1.5) contrast(150%) drop-shadow(0 0 30px #ff0000); 
  }
}

/* ヤマダ効果 */
.yamada-effect {
  animation: yamadaDistort 3s infinite;
  filter: hue-rotate(180deg) contrast(200%);
}

@keyframes yamadaDistort {
  0% { 
    transform: scale(1) rotate(0deg); 
    filter: hue-rotate(180deg) contrast(200%); 
  }
  25% { 
    transform: scale(1.2) rotate(2deg); 
    filter: hue-rotate(270deg) contrast(250%); 
  }
  50% { 
    transform: scale(0.8) rotate(-2deg); 
    filter: hue-rotate(360deg) contrast(150%); 
  }
  75% { 
    transform: scale(1.1) rotate(1deg); 
    filter: hue-rotate(450deg) contrast(300%); 
  }
  100% { 
    transform: scale(1) rotate(0deg); 
    filter: hue-rotate(180deg) contrast(200%); 
  }
}

/* 最終段階の背景 */
.final-phase {
  background: linear-gradient(135deg, #000000, #1a0000, #330000, #000000) !important;
  background-size: 400% 400% !important;
  animation: finalBackground 5s ease infinite, finalPulse 2s infinite;
}

@keyframes finalBackground {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes finalPulse {
  0%, 100% { 
    filter: brightness(0.8) contrast(120%); 
  }
  50% { 
    filter: brightness(1.5) contrast(200%) saturate(0%) invert(0.2); 
  }
}

/* 鏡効果 */
.mirror-effect {
  animation: mirrorDistort 2s ease-in-out;
}

@keyframes mirrorDistort {
  0% { 
    transform: scaleX(1) rotateY(0deg); 
    filter: brightness(1); 
  }
  25% { 
    transform: scaleX(-1) rotateY(180deg); 
    filter: brightness(1.5) invert(0.3); 
  }
  50% { 
    transform: scaleX(1) rotateY(360deg); 
    filter: brightness(0.5) contrast(200%); 
  }
  75% { 
    transform: scaleX(-1) rotateY(540deg); 
    filter: brightness(2) hue-rotate(180deg); 
  }
  100% { 
    transform: scaleX(1) rotateY(720deg); 
    filter: brightness(1); 
  }
}

/* 静電気効果 */
.static-effect {
  animation: staticNoise 0.1s infinite;
}

@keyframes staticNoise {
  0% { 
    filter: contrast(150%) brightness(1.2) saturate(0%) hue-rotate(0deg); 
    transform: translateX(0) translateY(0); 
  }
  25% { 
    filter: contrast(200%) brightness(0.8) saturate(50%) hue-rotate(90deg); 
    transform: translateX(2px) translateY(-1px); 
  }
  50% { 
    filter: contrast(100%) brightness(1.5) saturate(0%) hue-rotate(180deg); 
    transform: translateX(-1px) translateY(2px); 
  }
  75% { 
    filter: contrast(180%) brightness(0.6) saturate(30%) hue-rotate(270deg); 
    transform: translateX(-2px) translateY(-2px); 
  }
  100% { 
    filter: contrast(150%) brightness(1.2) saturate(0%) hue-rotate(360deg); 
    transform: translateX(1px) translateY(1px); 
  }
}

/* SAN値低下時のUI変化 */
.low-sanity {
  animation: insanityShake 0.5s infinite;
}

@keyframes insanityShake {
  0%, 100% { 
    transform: translateX(0) translateY(0) rotate(0deg); 
  }
  10% { 
    transform: translateX(-2px) translateY(-2px) rotate(-0.5deg); 
  }
  20% { 
    transform: translateX(2px) translateY(2px) rotate(0.5deg); 
  }
  30% { 
    transform: translateX(-2px) translateY(2px) rotate(-0.3deg); 
  }
  40% { 
    transform: translateX(2px) translateY(-2px) rotate(0.3deg); 
  }
  50% { 
    transform: translateX(-3px) translateY(0) rotate(-0.8deg); 
  }
  60% { 
    transform: translateX(3px) translateY(0) rotate(0.8deg); 
  }
  70% { 
    transform: translateX(0) translateY(-3px) rotate(-0.2deg); 
  }
  80% { 
    transform: translateX(0) translateY(3px) rotate(0.2deg); 
  }
  90% { 
    transform: translateX(-1px) translateY(-1px) rotate(-0.1deg); 
  }
}

/* 体力危険時の警告 */
.critical-health {
  animation: criticalFlash 1s infinite;
}

@keyframes criticalFlash {
  0%, 100% { 
    background: linear-gradient(90deg, #ff3742, #ff5722); 
    box-shadow: 0 0 10px rgba(255, 71, 87, 0.5); 
  }
  50% { 
    background: linear-gradient(90deg, #ffffff, #ff9999); 
    box-shadow: 0 0 20px rgba(255, 0, 0, 1); 
  }
}

/* イベントメッセージの怖い演出 */
#eventMessage.horror {
  border-color: #ff0000 !important;
  background: rgba(20, 0, 0, 0.98) !important;
  box-shadow: 0 0 40px #ff0000, inset 0 0 30px rgba(255, 0, 0, 0.5);
  animation: horrorMessagePulse 2s infinite;
}

#eventMessage.horror #eventText {
  color: #ff6666;
  text-shadow: 0 0 10px #ff0000;
}

@keyframes horrorMessagePulse {
  0%, 100% { 
    transform: scale(1) rotate(0deg); 
    filter: brightness(1) contrast(100%); 
  }
  50% { 
    transform: scale(1.03) rotate(0.5deg); 
    filter: brightness(1.3) contrast(150%); 
  }
}

/* 究極ホラー演出 */
.ultimate-horror-effect {
  animation: ultimateHorror 3s infinite;
}

@keyframes ultimateHorror {
  0% { 
    filter: invert(0) contrast(100%) hue-rotate(0deg); 
    transform: scale(1) rotate(0deg); 
  }
  10% { 
    filter: invert(1) contrast(300%) hue-rotate(90deg); 
    transform: scale(1.1) rotate(2deg); 
  }
  20% { 
    filter: invert(0) contrast(50%) hue-rotate(180deg); 
    transform: scale(0.9) rotate(-2deg); 
  }
  30% { 
    filter: invert(1) contrast(500%) hue-rotate(270deg); 
    transform: scale(1.2) rotate(3deg); 
  }
  40% { 
    filter: invert(0) contrast(200%) hue-rotate(360deg); 
    transform: scale(0.8) rotate(-3deg); 
  }
  50% { 
    filter: invert(1) contrast(1000%) hue-rotate(450deg) saturate(300%); 
    transform: scale(1.3) rotate(5deg); 
  }
  60% { 
    filter: invert(0) contrast(10%) hue-rotate(540deg); 
    transform: scale(0.7) rotate(-5deg); 
  }
  70% { 
    filter: invert(1) contrast(800%) hue-rotate(630deg); 
    transform: scale(1.15) rotate(4deg); 
  }
  80% { 
    filter: invert(0) contrast(300%) hue-rotate(720deg); 
    transform: scale(0.85) rotate(-4deg); 
  }
  90% { 
    filter: invert(1) contrast(2000%) hue-rotate(810deg); 
    transform: scale(1.25) rotate(6deg); 
  }
  100% { 
    filter: invert(0) contrast(100%) hue-rotate(0deg); 
    transform: scale(1) rotate(0deg); 
  }
}

/* スマホ対応 */
@media (max-width: 768px) {
  #startScreen h1 {
    font-size: 2rem;
  }
  
  #startScreen p {
    font-size: 1.2rem;
    padding: 0 20px;
  }
  
  #timeDisplay {
    font-size: 1.5rem;
  }
  
  .bar {
    width: 100px;
  }
  
  #gameHeader {
    height: 70px;
    flex-wrap: wrap;
    padding: 10px;
    gap: 10px;
  }
  
  .customer-sprite {
    font-size: 3rem;
  }
  
  .speech-bubble {
    max-width: 250px;
    font-size: 0.9rem;
    padding: 12px 15px;
  }
  
  .register {
    font-size: 2rem;
  }
  
  #registerScreen {
    min-width: 150px;
    padding: 10px 15px;
    font-size: 0.9rem;
  }
  
  #workArea {
    height: 100px;
    flex-wrap: wrap;
    gap: 10px;
    padding: 15px;
  }
  
  .work-btn {
    flex: 1;
    min-width: 80px;
    font-size: 0.9rem;
    padding: 8px 12px;
  }
  
  #eventMessage {
    max-width: 95%;
    padding: 20px;
  }
  
  #eventText {
    font-size: 1.1rem;
    line-height: 1.5;
  }
  
  #endTitle {
    font-size: 2rem;
  }
  
  #endMessage {
    font-size: 1.1rem;
    max-width: 90%;
  }
  
  /* モバイル向けホラー演出の調整 */
  .customer-scary .customer-sprite {
    font-size: 4rem;
  }
  
  @keyframes scaryFloat {
    0%, 100% { 
      transform: translateY(0) rotate(0deg) scale(1); 
    }
    50% { 
      transform: translateY(-15px) rotate(2deg) scale(1.05); 
    }
  }
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-image: url("images/konbini.jpg");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  color: white;
  overflow: hidden;
  user-select: none;
  transition: all 0.5s ease;
}

/* 背景画像がない場合のフォールバック */
body:not([style*="background-image"]) {
  background: linear-gradient(135deg, #1a1a2e, #16213e);
}

#gameContainer {
  width: 100%;
  height: 100vh;
  position: relative;
}

/* 画面共通設定 */
.screen {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  left: 0;
  transition: opacity 0.5s ease;
  backdrop-filter: blur(2px);
}

.hidden {
  opacity: 0;
  pointer-events: none;
}

/* スタート画面 */
#startScreen {
  background: linear-gradient(135deg, rgba(15, 15, 35, 0.9), rgba(22, 33, 62, 0.9));
}

#startScreen h1 {
  font-size: 3rem;
  margin-bottom: 2rem;
  text-shadow: 0 0 20px #4a90e2, 0 0 40px #4a90e2;
  animation: glow 2s ease-in-out infinite alternate;
